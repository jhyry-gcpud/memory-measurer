buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'com.labun.buildnumber:jgit-buildnumber-gradle-plugin:2.4.0'
    }
}

/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'com.github.spotbugs' version '4.7.1' apply false
    id 'eclipse'
    id 'java-library'
}

import com.labun.buildnumber.JGitBuildNumberGradleTask

repositories {
    mavenLocal()
    mavenCentral()
}

apply from: "$projectDir/gradle/spotbugs.gradle"

dependencies {
    spotbugsPlugins 'com.mebigfatguy.sb-contrib:sb-contrib:7.4.7'
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'

    api 'org.apache.commons:commons-math3:3.6.1'

    implementation 'com.google.guava:guava:r09'
    implementation 'com.google.code.findbugs:jsr305:2.0.1'

    testImplementation 'junit:junit:4.12'
}

eclipse {
    project {
        natures 'edu.umd.cs.findbugs.plugin.eclipse.findbugsNature'
        buildCommand 'edu.umd.cs.findbugs.plugin.eclipse.findbugsBuilder'
    }

    classpath.downloadJavadoc = true
    classpath.downloadSources = false
}

task extractBuildNumber (type: JGitBuildNumberGradleTask) {
    shortRevisionLength = 7
    buildNumberFormat = "commitsCount + '-' + shortRevision"
    verbose = true
}

jar{
    baseName = project.properties['application.lib.name']

    preserveFileTimestamps = false
    reproducibleFileOrder = true

    exclude(['**/*.xml'])

    doFirst {
        apply from: "$projectDir/gradle/git-util.gradle"

        def rev = getCheckedOutGitCommitHash(projectDir)
        def revCount = git.buildNumber

        manifest {
            attributes(
                'Premain-Class'            : project.properties['application.impl.preMainClassName'],
                'Main-Class'               : project.properties['application.impl.mainClassName'],
                'Built-By'                 : System.properties['user.name'],
                'Build-Revision'           : rev,
                'Build-Jdk'                : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'                 : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                'Created-By'               : 'object-explorer Gradle Build',
                'Gradle-Version'           : gradle.gradleVersion,
                'Groovy-Version'           : GroovySystem.getVersion(),
                'Specification-Title'      : project.properties['application.title'],
                'Specification-Version'    : "${project.properties['version.major']}.${project.properties['version.minor']}.0.0",
                'Implementation-Title'     : "${project.properties['application.title']}-${project.name}",
                'Implementation-Version'   : "${project.properties['version.major']}.${project.properties['version.minor']}.$revCount"
            )
        }
    }

    dependsOn extractBuildNumber
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
